(function() {

	var version = "V1";
	var sidCookieName = "__hau";
	var vsidCookieName = "__havsid";

	var oParam = new Object();
	oParam.app = "NotSet";

	//pv的请求是否第一次加载
	var isFirstLoad = true;

	var NaviUtil = {
		addHandler : function(element, type, handler) {
			if (element.addEventListener) {
				element.addEventListener(type, handler, false);
			} else if (element.attachEvent) {
				element.attachEvent("on" + type, handler);
			} else {
				element["on" + type] = handler;
			}
		},

		removeHandler : function(element, type, handler) {
			if (element.removeEventListener) {
				element.removeEventListener(type, handler, false);
			} else if (element.detachEvent) {
				element.detachEvent("on" + type, handler);
			} else {
				element["on" + type] = null;
			}
		}
	};

	var sliceStr = function(str, length){
		return str == undefined || str == null? '' : str.slice(0, length)
	}

	var buildImageUrl = function(o) {

        var imageUrl = "https://support.huawei.com/da/utc.gif?";
		//s3加时间戳，识别重复日志
		o.s3 = getDaTimeStamp();

		if (notEmpty(o.app))
			imageUrl = imageUrl + "app=" + encode2Times(o.app);
		if (notEmpty(o.u))
			imageUrl = imageUrl + "&u=" + encode2Times(o.u);
		if (notEmpty(o.s))
			imageUrl = imageUrl + "&s=" + encode2Times(o.s);
		if (notEmpty(o.sid))
			imageUrl = imageUrl + "&sid=" + encode2Times(o.sid);
		if (notEmpty(o.res))
			imageUrl = imageUrl + "&res=" + encode2Times(o.res);
		if (notEmpty(o.vt))
			imageUrl = imageUrl + "&vt=" + encode2Times(o.vt);
		if (notEmpty(o.vsid))
			imageUrl = imageUrl + "&vsid=" + encode2Times(o.vsid);
		if (notEmpty(o.url))
			imageUrl = imageUrl + "&url=" + encode2Times(sliceStr(o.url, 1000));
		if (notEmpty(o.rfr))
			imageUrl = imageUrl + "&rurl=" + encode2Times(sliceStr(o.rfr, 1000));
		if (notEmpty(o.ti))
			imageUrl = imageUrl + "&ti=" + encode2Times(o.ti);
		if (notEmpty(o.rt))
			imageUrl = imageUrl + "&rt=" + encode2Times(o.rt);
		if (notEmpty(o.xy))
			imageUrl = imageUrl + "&xy=" + encode2Times(o.xy);
		if (notEmpty(o.lang))
			imageUrl = imageUrl + "&l=" + encode2Times(o.lang);
		if (notEmpty(o.r1))
			imageUrl = imageUrl + "&re1=" + encode2Times(o.r1);
		if (notEmpty(o.r2))
			imageUrl = imageUrl + "&re2=" + encode2Times(o.r2);
		if (notEmpty(o.r3))
			imageUrl = imageUrl + "&re3=" + encode2Times(o.r3);
		if (notEmpty(o.r4))
			imageUrl = imageUrl + "&re4=" + encode2Times(o.r4);
		if (notEmpty(o.r5))
			imageUrl = imageUrl + "&re5=" + encode2Times(o.r5);
		if (notEmpty(o.r6))
			imageUrl = imageUrl + "&re6=" + encode2Times(o.r6);
		if (notEmpty(o.r7))
			imageUrl = imageUrl + "&re7=" + encode2Times(o.r7);
		if (notEmpty(o.r8))
			imageUrl = imageUrl + "&re8=" + encode2Times(o.r8);
		if (notEmpty(o.r9))
			imageUrl = imageUrl + "&re9=" + encode2Times(o.r9);
		if (notEmpty(o.r10))
			imageUrl = imageUrl + "&re10=" + encode2Times(o.r10);
		if (notEmpty(o.r11))
			imageUrl = imageUrl + "&re11=" + encode2Times(o.r11);
		if (notEmpty(o.r12))
			imageUrl = imageUrl + "&re12=" + encode2Times(o.r12);
		if (notEmpty(o.r13))
			imageUrl = imageUrl + "&re13=" + encode2Times(o.r13);
		if (notEmpty(o.r14))
			imageUrl = imageUrl + "&re14=" + encode2Times(o.r14);
		if (notEmpty(o.r15))
			imageUrl = imageUrl + "&re15=" + encode2Times(o.r15);
		if (notEmpty(o.r16))
			imageUrl = imageUrl + "&re16=" + encode2Times(o.r16);
		if (notEmpty(o.r17))
			imageUrl = imageUrl + "&re17=" + encode2Times(o.r17);
		if (notEmpty(o.r18))
			imageUrl = imageUrl + "&re18=" + encode2Times(o.r18);
		if (notEmpty(o.r19))
			imageUrl = imageUrl + "&re19=" + encode2Times(o.r19);
		if (notEmpty(o.r20))
			imageUrl = imageUrl + "&re20=" + encode2Times(o.r20);
		if (notEmpty(o.r21))
			imageUrl = imageUrl + "&re21=" + encode2Times(o.r21);
		if (notEmpty(o.r22))
			imageUrl = imageUrl + "&re22=" + encode2Times(o.r22);
		if (notEmpty(o.r23))
			imageUrl = imageUrl + "&re23=" + encode2Times(o.r23);
		if (notEmpty(o.r24))
			imageUrl = imageUrl + "&re24=" + encode2Times(o.r24);
		if (notEmpty(o.r25))
			imageUrl = imageUrl + "&re25=" + encode2Times(o.r25);
		if (notEmpty(o.r26))
			imageUrl = imageUrl + "&re26=" + encode2Times(o.r26);
		if (notEmpty(o.r27))
			imageUrl = imageUrl + "&re27=" + encode2Times(o.r27);
		if (notEmpty(o.r28))
			imageUrl = imageUrl + "&re28=" + encode2Times(o.r28);
		if (notEmpty(o.r29))
			imageUrl = imageUrl + "&re29=" + encode2Times(o.r29);
		if (notEmpty(o.r30))
			imageUrl = imageUrl + "&re30=" + encode2Times(o.r30);
		if (notEmpty(o.name))
			imageUrl = imageUrl + "&name=" + encode2Times(o.name);
		if (notEmpty(o.siteId))
			imageUrl = imageUrl + "&siteId=" + encode2Times(o.siteId);
		if (notEmpty(o.dmpdaModule))
			imageUrl = imageUrl + "&module=" + encode2Times(o.dmpdaModule);
		if (notEmpty(version))
			imageUrl = imageUrl + "&version=" + encode2Times(version);
		if (notEmpty(o.pageContainer))
			imageUrl = imageUrl + "&container=" + encode2Times(o.pageContainer);
		if (notEmpty(o.pageVid))
			imageUrl = imageUrl + "&pageVid=" + encode2Times(o.pageVid);
		if (notEmpty(o.s0))
			imageUrl = imageUrl + "&s0=" + encode2Times(o.s0);
		if (notEmpty(o.s1))
			imageUrl = imageUrl + "&s1=" + encode2Times(o.s1);
		if (notEmpty(o.s2))
			imageUrl = imageUrl + "&s2=" + encode2Times(o.s2);
		if (notEmpty(o.s3))
			imageUrl = imageUrl + "&s3=" + encode2Times(o.s3);
		if (notEmpty(o.s4))
			imageUrl = imageUrl + "&s4=" + encode2Times(o.s4);
		if (notEmpty(o.s5))
			imageUrl = imageUrl + "&s5=" + encode2Times(o.s5);
		if (notEmpty(o.s6))
			imageUrl = imageUrl + "&s6=" + encode2Times(o.s6);
		if (notEmpty(o.s7))
			imageUrl = imageUrl + "&s7=" + encode2Times(o.s7);
		if (notEmpty(o.s8))
			imageUrl = imageUrl + "&s8=" + encode2Times(o.s8);
		if (notEmpty(o.s9))
			imageUrl = imageUrl + "&s9=" + encode2Times(o.s9);
		if (notEmpty(o.d0))
			imageUrl = imageUrl + "&d0=" + encode2Times(o.d0);
		if (notEmpty(o.d1))
			imageUrl = imageUrl + "&d1=" + encode2Times(o.d1);
		if (notEmpty(o.d2))
			imageUrl = imageUrl + "&d2=" + encode2Times(o.d2);
		if (notEmpty(o.d3))
			imageUrl = imageUrl + "&d3=" + encode2Times(o.d3);
		if (notEmpty(o.d4))
			imageUrl = imageUrl + "&d4=" + encode2Times(o.d4);
		if (notEmpty(o.d5))
			imageUrl = imageUrl + "&d5=" + encode2Times(o.d5);
		if (notEmpty(o.d6))
			imageUrl = imageUrl + "&d6=" + encode2Times(o.d6);
		if (notEmpty(o.d7))
			imageUrl = imageUrl + "&d7=" + encode2Times(o.d7);
		if (notEmpty(o.d8))
			imageUrl = imageUrl + "&d8=" + encode2Times(o.d8);
		if (notEmpty(o.d9))
			imageUrl = imageUrl + "&d9=" + encode2Times(o.d9);
		if (notEmpty(o.m0))
			imageUrl = imageUrl + "&m0=" + encode2Times(o.m0);
		if (notEmpty(o.m1))
			imageUrl = imageUrl + "&m1=" + encode2Times(o.m1);
		if (notEmpty(o.m2))
			imageUrl = imageUrl + "&m2=" + encode2Times(o.m2);
		if (notEmpty(o.m3))
			imageUrl = imageUrl + "&m3=" + encode2Times(o.m3);
		if (notEmpty(o.m4))
			imageUrl = imageUrl + "&m4=" + encode2Times(o.m4);
		if (notEmpty(o.m5))
			imageUrl = imageUrl + "&m5=" + encode2Times(o.m5);
		if (notEmpty(o.m6))
			imageUrl = imageUrl + "&m6=" + encode2Times(o.m6);
		if (notEmpty(o.m7))
			imageUrl = imageUrl + "&m7=" + encode2Times(o.m7);
		if (notEmpty(o.m8))
			imageUrl = imageUrl + "&m8=" + encode2Times(o.m8);
		if (notEmpty(o.m9))
			imageUrl = imageUrl + "&m9=" + encode2Times(o.m9);

		return imageUrl;
	};
	
	var getDaTimeStamp = function(){
		return new Date().getTime();
	}

	var sendByImage = function(o, useTimer) {
		if (!blockingDottingByCookie(o)) {
			return;
		}
		var image = new Image(1, 1);

		if (useTimer) {
			setTimeout(function() {
				try {
					image.src = buildImageUrl(o);
				} catch (e) {
				}
			}, 100);
		} else {
			try {
				image.src = buildImageUrl(o);
			} catch (e) {
			}
		}
	};

	var blockingDottingByCookie = function(o) {
		try {
		var langDa = o.lang
		var appA = o.app
		langDa = langDa == null || langDa == '' ? getCookie('lang') : langDa;
		var supporteLang = 'en;br;es;fr;it;de'
		var supportLang = 'en'
		var supporteLangs = supporteLang.split(";")
		var supportLangs = supportLang.split(";")

		if ((appA == 'SUPPORT' && supportLangs.indexOf(langDa) > -1) || (appA=='SUPPORTE'
			&& supporteLangs.indexOf(langDa) > -1)) {
			var privacy=''
			var urlLang = langDa == 'en' ? 'ENG' : langDa.toUpperCase();
			if(appA == 'SUPPORTE'){
				privacy = decodeURIComponent(getCookieLike('hw_privacy_cookie_esddp_enterprise_' + urlLang))
			} else {
				privacy = decodeURIComponent(getCookieLike('hw_privacy_cookie_esddp_carrier_' + urlLang))
			}
			if (privacy == undefined || privacy == null || privacy == '') {
				return false;
			}
			var obj = JSON.parse(privacy);
			return obj != null && obj['Analytics'] ? true :false;
		} else {
			return true;
		}
		} catch (err) {
			return false
		}
		return false;
	}

	var getCookieLike = function(name) {
		var _regexp = new RegExp("\\b" + name + "_[^=\\b]{1,5}=[^;\\b]+");
		var _arrayCookie = document.cookie.match(_regexp);
		if (_arrayCookie) {
			return _arrayCookie[0].split("=")[1];
		} else {
			return null;
		}
	};

	var defApp = function(strValue) {
		oParam.app = strValue;
		if (!notEmpty(getCookie(sidCookieName))) {
			setCookie(sidCookieName, oParam.app + "." + Math.round((new Date()).getTime() / 1000) + "." + getRandom(), 365 * 24);
		}

		setVsidCookie();
	};
 
	var defCookieL = function(strValue) {
		oParam.cookieL = strValue;
	};
 
	var encode2Times = function(strValue) {
		return encodeURIComponent(encodeURIComponent(strValue));
	};

	var notEmpty = function(strValue) {
		return strValue != null && strValue != "";
	};

	var getScreen = function() {
		if (window.screen) {
			return screen.width + "x" + screen.height;
		} else {
			return null;
		}
	};

	var getFullUrl = function(url) {
		if (url.indexOf("http:") != 0 && url.indexOf("https:") != 0) {
			if (url.indexOf("/") != 0) {
				return location.href.substring(0, location.href.lastIndexOf('/')) + "/" + url;
			} else {
				return location.href.substring(0, location.href.indexOf('/', 10)) + url;
			}
		} else {
			return url;
		}
	};

	var getRt = function() {
		if (window.performance) {
			return (performance.timing.domainLookupEnd - performance.timing.domainLookupStart)
					+ "|"
					+ (performance.timing.connectEnd - performance.timing.domainLookupStart)
					+ "|"
					+ (performance.timing.responseStart - performance.timing.domainLookupStart)
					+ "|"
					+ (performance.timing.responseEnd - performance.timing.domainLookupStart)
					+ "|"
					+ (performance.timing.domComplete - performance.timing.domainLookupStart);
		} else {
			return null;
		}
	};

	var getCookie = function(name) {
		var _regexp = new RegExp("\\b" + name + "=[^;\\b]+");
		var _arrayCookie = document.cookie.match(_regexp);
		if (_arrayCookie) {
			return _arrayCookie[0].split("=")[1];
		} else {
			return null;
		}
	};

	var setCookie = function(name, value, ttl) {
		var s = name + "=" + escape(value);
		if (ttl > 0) {
			date = new Date();
			date = new Date(date.getTime() + ttl * 1000 * 3600);
			s = s + "; expires=" + date.toGMTString();
			s = s + "; Domain=huawei.com";
			s = s + "; path =/";
		}

		document.cookie = s;
		
	};
	
	var getPageVid = function() {
		return Math.round(new Date().getTime() / 1000) + "." + getRandom();
	}

	var setVsidCookie = function() {
		var vsidCookie = getCookie(vsidCookieName);
		if (notEmpty(vsidCookie)) {
			setCookie(vsidCookieName, vsidCookie, 0.5);
		} else {
			setCookie(vsidCookieName, getCookie(sidCookieName) + "." + Math.round(new Date().getTime() / 1000), 0.5);
		}
	};

	var refreshCookieExpires = function(name, ttl) {
		if (notEmpty(getCookie(name))) {
			setCookie(name, getCookie(name), ttl);
		}
	};

	var getRandom = function() {
		return Math.round(Math.random() * 2147483647);
	};

	var getCoordinate = function(event) {
		if (event.pageX == null && event.clientX != null) {
			var eventObj = event.srcElement ? event.srcElement : event.target;
			var eventDoc = eventObj.ownerDocument || document;
			var doc = eventDoc.documentElement;
			body = eventDoc.body;

			event.pageX = event.clientX
					+ (doc && doc.scrollLeft || body && body.scrollLeft || 0)
					- (doc && doc.clientLeft || body && body.clientLeft || 0);
			event.pageY = event.clientY
					+ (doc && doc.scrollTop || body && body.scrollTop || 0)
					- (doc && doc.clientTop || body && body.clientTop || 0);
		}

		return event.pageX + "x" + event.pageY;
	};

	var handleHaq = function(_haq, useTimer) {
		var arrayFunction = _haq.shift();
		
		var len = arrayFunction.length;
		
		if(len === 2)
		{
			var key = arrayFunction[0];

			var value = typeof arrayFunction[1] === "object" ? arrayFunction[1] : new Object();
			
			switch(key){
				case '_trackEvent':
					trackEvent(value, useTimer);
					break;
				case '_trackEvt':
					trackEvt(value, useTimer);
					break;
//				2018-10-19删除vt='pg'类型的日志
//				case '_trackPage':
//					trackPage(value, useTimer);
//					break;
				default:
					break;
			}
		}
	};

	var handleQueue = function(useTimer) {
		var parameters = dmpda.q.shift();
		var len = parameters.length;
		if(len<2){
			return;
		}
		var method = parameters[0];
		
		if(method=='set' && len==3){
			var key = parameters[1];
			var value = parameters[2];
			if(key=='app') {
				defApp(value);
			}
			else if(key=='languageKey') {
				defCookieL(value);
			}
		}else if(method=='send' && len>=2){
			var key = parameters[1];
			var value = typeof parameters[2] === "object" ? parameters[2] : new Object();
			switch(key){
				case 'pv':
					trackPageView(value, useTimer);
					break;
				case 'click':
					trackClick(value, useTimer);
					break;
				case 'evt':
					trackEvt(value, useTimer);
					break;
				case 'event':
					trackEvent(value, useTimer);
					break;
				case 'apv':
					trackApv(value, useTimer);
					break;
				default:
					break;
			}
		}else{
		}

	};

	var mimeType = function(s) {
		var navi = navigator || window.navigator;
		if (navi.mimeTypes && navi.mimeTypes.length) {

			return navi.mimeTypes[s] && navi.mimeTypes[s].enabledPlugin;
		}
		return false;
	};

	var hasIEPlugin = function(name) {
		try {
			new ActiveXObject(name);
			return true;
		} catch (e) {
			return false;
		}
	};

	
	var getMetaContent = function(metaName)
	{
		var metaTag = document.getElementsByTagName('meta')[metaName];
		var ret = "";
		if(typeof metaTag != "undefined")
		{
			var metaContent = metaTag.getAttribute('content');
			ret = metaContent ? metaContent : "";
		}else
		{
			var metaTags = document.getElementsByTagName('meta');
			if(metaTags)
			{
				for(var i=0; i<metaTags.length; i++)
				{
					var metaTag = metaTags[i];
					var curMetaName = metaTag.getAttribute('name');
					if(curMetaName == metaName){
						var metaContent = metaTag.getAttribute('content');
						ret = metaContent ? metaContent : "";
						break;
					}
				}
			}
		}
		return ret;
	}

	var getBasicInfo = function(o) {
		o.app = oParam.app;
		o.sid = getCookie(sidCookieName);
		o.rfr = o.rfr ? o.rfr : document.referrer;
		o.res = getScreen();
		o.dmpdaLang = getMetaContent('dmpda-language');
		o.lang = o.dmpdaLang != '' ? o.dmpdaLang : getCookie(oParam.cookieL);
		o.url = o.url ? o.url : location.href;
		o.ti = o.ti ? o.ti : document.title;
		o.vsid = getCookie(vsidCookieName);
		o.name = getMetaContent('dmpda-module');
		o.dmpdaModule = getMetaContent('dmpda-module');
		o.pageVid = getPageVid();
	};

	var getPageInfo = function(o) {
		o.r1 = o.module;
		o.r2 = o.navi;
		o.r3 = o.navi_name;
		o.r4 = o.pbi;
		o.r5 = o.pbi_name;
		o.r6 = o.res_type;
		o.r7 = o.res_id;
		o.r8 = o.res_title;
		o.r17 = o.offering;
		o.r18 = o.jsondata;
	};

	var getClientInfo = function(o) {
		var cookie, flash, s, java, pdf;
		var navi = navigator || window.navigator;

		cookie = navi.cookieEnabled ? "1" : "0";

		flash = (mimeType("application/x-shockwave-flash") || hasIEPlugin("ShockwaveFlash.ShockwaveFlash")) ? "1"
				: "0";
		s = (mimeType("application/x-silverlight") || hasIEPlugin("AgControl.AgControl")) ? "1"
				: "0";
		java = (mimeType("application/x-java-vm") || (typeof navi.javaEnabled != 'unknown'
				&& undefined != navi.javaEnabled && navi.javaEnabled())) ? "1"
				: "0";
		pdf = (mimeType("application/pdf") || hasIEPlugin("AcroPDF.PDF") || hasIEPlugin("PDF.PdfControl")) ? "1"
				: "0";

		o.r9 = cookie + "|" + flash + "|" + s + "|" + java + "|" + pdf;

		var now = new Date();
		o.r10 = -now.getTimezoneOffset() / 60;
		o.r11 = Math.round(now.getTime() / 1000);

		getBrowserInfo(o);

	};

	var getBrowserInfo = function(o) {
		var navi = navigator || window.navigator;

		o.r14 = navi.browserLanguage || navi.language;
		o.r15 = navi.platform;
		
		o.pageContainer = window.HWSupportApp ? window.HWSupportApp : "";
	};

	var trackPageView = function(o, useTimer) {

		refreshCookieExpires(sidCookieName, 365 * 24);

		getBasicInfo(o);
		
		getPageInfo(o);

		o.vt = "pv";
		o.rt = getRt();

		getClientInfo(o);

		sendByImage(o, useTimer);
	};
	
	var trackPage = function(o, useTimer) {
//		getBasicInfo(o);
//
//		getPageInfo(o);
//
//		o.vt = "pg";
//
//		sendByImage(o, useTimer);
	};

	var trackClick = function(o, useTimer) {

		getBasicInfo(o);

		o.vt = "click";

		sendByImage(o, useTimer);

	};

	var trackApv = function(o, useTimer) {

		getBasicInfo(o);

		getPageInfo(o);

		getClientInfo(o);

		o.vt = "apv";

		sendByImage(o, useTimer);
	};

	var trackEvent = function(o, useTimer) {		
		o.r30 = o.url;
		
		o.url = location.href;
		
		getBasicInfo(o);

		o.vt = "evt-" + o.vt;

		sendByImage(o, useTimer);
	};

	var trackEvt = function(o, useTimer) {
		getBasicInfo(o);

		o.ti = document.title;
		o.vt = "evt";

		o.r1 = o.category;
		o.r2 = o.action;
		o.r3 = o.label;
		o.r4 = o.value;
		o.r5 = o.container;
		o.r6 = o.duration;
		o.r7 = o.start_time;
		o.r8 = o.c_data;
		o.r9 = o.c_json;

		sendByImage(o, useTimer);
	};
	
	var roundPoll = function(useTimer){
		if (typeof dmpda.q != "undefined") {
			while (dmpda.q && dmpda.q.length > 0) {
				handleQueue(useTimer);
			}
		}
		
		if (typeof _haq != "undefined") {
			while (_haq && _haq.length > 0) {
				handleHaq(_haq, useTimer);
			}
		}
	}

	var handler = function() {
		if (document.readyState === "complete" || document.readyState === "interactive") {
			
			if(isFirstLoad){
				isFirstLoad = false;
			}else{
				return;
			}
			
			setInterval(function() {
				roundPoll(true);
			}, 1000);
		}
	};

	var clickHandler = function(evt) {
 
		var e = evt || window.event;

		var tg = e.target || e.srcElement;

		var tgName = tg.tagName ? tg.tagName.toUpperCase() : "";
		
		var tgType = tg.getAttribute("type") ? tg.getAttribute("type").toUpperCase() : "";
		
		var tgParent = tg.parentElement;
		
		var tgGrand = tgParent ? tgParent.parentElement : null;
		
		var tgFlag = null;//标识取的事件对象是当前的元素、父元素还是祖父元素
 
		if (!("A" == tgName  
			|| ("INPUT" == tgName && "SUBMIT" == tgType)
			|| ("INPUT" == tgName && "BUTTON" == tgType)
			|| "BUTTON" == tgName)) 
		{
			if(tgParent && "A" == tgParent.tagName.toUpperCase())
			{
				tgFlag = "parent";
			}
			else if (tgGrand && "A" == tgGrand.tagName.toUpperCase())
			{
				tgFlag = "grand";
			}
			else
			{
				return;
			}
		}

		var o = new Object(); 

		var ti = tg.innerText || tg.textContent || tg.value;

		o.ti = ti ? ti.substring(0, 100).replace(/\t/g, " ").replace(/\n/g, " ") : "";

		o.xy = getCoordinate(e);
		
		if(tgFlag == "parent")
		{
			tg = tgParent;
		}
		else if(tgFlag == "grand")
		{
			tg = tgGrand;
		}

		o.r1 = tg.getAttribute("ha_category");
		o.r2 = tg.getAttribute("ha_action");
		o.r3 = tg.getAttribute("ha_label");
		o.r4 = tg.getAttribute("ha_value");
		o.r5 = tg.getAttribute("ha_container");
		o.r8 = tg.getAttribute("ha_data");
		o.r9 = tg.getAttribute("ha_json");

		o.r16 = tg.tagName ? tg.tagName.toUpperCase() : "";
		o.r17 = tg.getAttribute("id");
		o.r18 = tg.getAttribute("href");
		o.r19 = tg.getAttribute("name");
		o.r20 = tg.getAttribute("class");
		o.r21 = tg.getAttribute("ha_name");
		o.r23 = tgName;//原始点击dom类型

		dmpda('send', 'click', o);

	};

	NaviUtil.addHandler(document, 'readystatechange', handler);

	NaviUtil.addHandler(document, 'click', clickHandler);

	NaviUtil.addHandler(window, 'hashchange', function() {
        dmpda('send', 'apv');
	});

	NaviUtil.addHandler(window, 'beforeunload', function() {
		roundPoll(false);
	});

})();